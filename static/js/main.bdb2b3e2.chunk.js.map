{"version":3,"sources":["components/Header.js","components/ContactForm.js","components/ContactSection.js","components/EmploymentSection.js","components/EducationSection.js","components/SectionHeader.js","components/EducationForm.js","components/WorkHistory.js","components/GeneratedCV.js","App.js","index.js"],"names":["Header","props","className","Component","ContactForm","state","emailLabel","submitDisabled","e","mailformat","emailAdress","target","value","match","this","setState","formattedPhoneNumber","phoneNumber","replace","contactClass","id","name","data-nav","firstName","onChange","handleChange","phone","onBlur","validatePhone","email","validateEmail","bind","disabled","type","data-target","onClick","handleSubmit","ContactSection","contactArea","contactArray","map","info","i","data-index","firstNameLastName","editSection","Fragment","EmploymentSection","console","log","jobsDiv","emplArray","job","employer","title","emplBeginDate","toLocaleString","month","year","emplEndDate","duties","EducationSection","eduDiv","eduArray","edu","institution","typeOfEd","fieldOfStudy","eduBeginDate","eduEndDate","SectionHeader","class","style","marginTop","onHeaderClick","data-buttonname","data","children","EducationForm","educationClass","fontFamily","selected","calendar","WorkHistory","employmentClass","GeneratedCV","App","getDefaultObject","obj","defaultValues","string","boolean","Object","keys","reduce","acc","key","dateChange","date","category","prevState","field","dataset","nav","preventDefault","stateObject","initialClass","showFormClass","array","infoBoolean","concat","isReadyToGenerate","contactInfo","employmentInfo","educationInfo","generateButtonText","generateButtonClassName","newState","headerName","buttonname","stateName","stateShow","generateCV","readyToGenerate","contact","parentNode","remove","index","classState","navArray","educationArray","employmentArray","education","Date","employment","lastName","dateFormat","showMonthYearPicker","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdb2b3e2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Header extends Component {\n  constructor(props) {\n    super();\n  }\n\n  render() {\n    return <h3 className=\"top-header\">CV Generator App</h3>;\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nclass ContactForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emailLabel: \"Email\",\n      submitDisabled: false,\n    };\n  }\n\n  validateEmail(e) {\n    const mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    const emailAdress = e.target.value;\n    if (!emailAdress.match(mailformat)) {\n      this.setState({\n        emailLabel: \"Please enter a valid email address\",\n        submitDisabled: true,\n      });\n    } else if (emailAdress.match(mailformat)) {\n      this.setState({\n        emailLabel: \"Email\",\n        submitDisabled: false,\n      });\n    }\n  }\n\n  validatePhone() {\n    let phoneRegex = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n    let formattedPhoneNumber = this.state.phoneNumber.replace(\n      phoneRegex,\n      \"($1) $2-$3\"\n    );\n    this.setState({ phoneNumber: formattedPhoneNumber });\n  }\n\n  showMore() {}\n  render() {\n    return (\n      <div className=\"wrapper-contact\">\n        <form className={this.props.contactClass}>\n          <label id=\"first-name\">First and Last Name:</label>\n          <textarea\n            // placeholder=\"First Name\"\n            // style={{ fontFamily: \"Lato\" }}\n            name=\"firstNameLastName\"\n            data-nav=\"contact\"\n            value={this.props.firstName}\n            onChange={this.props.handleChange}\n          />\n          {/* <label id=\"last-name\">Last Name:</label>\n          <textarea\n            name=\"lastName\"\n            data-nav=\"contact\"\n            value={this.props.lastName}\n            onChange={this.props.handleChange}\n          /> */}\n          <label id=\"phone\">Phone Number:</label>\n          <textarea\n            name=\"phone\"\n            data-nav=\"contact\"\n            value={this.props.phone}\n            onChange={this.props.handleChange}\n            onBlur={this.props.validatePhone}\n          />\n          <label id=\"email\">{this.state.emailLabel}:</label>\n          <textarea\n            name=\"email\"\n            data-nav=\"contact\"\n            value={this.props.email}\n            onChange={this.props.handleChange}\n            onBlur={this.validateEmail.bind(this)}\n          />\n          <button\n            id=\"submit\"\n            disabled={this.state.submitDisabled}\n            className=\"submit-add submit-contact\"\n            type=\"button\"\n            value=\"Submit\"\n            data-target=\"contact\"\n            onClick={this.props.handleSubmit}\n          >\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\n\nfunction ContactSection(props) {\n  const contactArea = props.contactArray.map((info, i) => (\n    <div\n      data-index={i}\n      key={i}\n      data-nav=\"contact\"\n      className=\"contact-section-cv\"\n    >\n      <h3>{info.firstNameLastName}</h3>\n      <p>{info.phone}</p>\n      <p>{info.email}</p>\n      <button\n        type=\"button\"\n        className=\"submit-add cs\"\n        onClick={props.editSection}\n      >\n        Edit\n      </button>\n    </div>\n  ));\n  return <React.Fragment>{contactArea}</React.Fragment>;\n}\n\nexport default ContactSection;\n","import React from \"react\";\n\nfunction EmploymentSection(props) {\n  //   const { jobs } = props;\n  console.log(props);\n\n  const jobsDiv = props.emplArray.map((job, i) => (\n    <div\n      key={i}\n      className=\"work-section-cv\"\n      data-nav=\"employment\"\n      data-index={i}\n    >\n      <h4 className=\"h4-cv title\">Employment History</h4>\n      <h4 className=\"h4-cv\" id=\"employer\">\n        {job.employer}\n      </h4>\n      <h4 className=\"h4-cv\" id=\"title\">\n        {job.title}\n      </h4>\n      <p className=\"dates-of-empledu\">\n        {job.emplBeginDate.toLocaleString(\"default\", { month: \"long\" }) +\n          \" \" +\n          job.emplBeginDate.toLocaleString(\"default\", { year: \"numeric\" }) +\n          \" - \" +\n          job.emplEndDate.toLocaleString(\"default\", { month: \"long\" }) +\n          \" \" +\n          job.emplEndDate.toLocaleString(\"default\", { year: \"numeric\" })}\n      </p>\n      <p id=\"duty\">{job.duties}</p>\n      <button\n        type=\"button\"\n        className=\"submit-add edit\"\n        onClick={props.editSection}\n      >\n        Edit\n      </button>\n    </div>\n  ));\n  return props.emplArray ? <React.Fragment>{jobsDiv}</React.Fragment> : null;\n}\n\nexport default EmploymentSection;\n","import React from \"react\";\n\nfunction EducationSection(props) {\n  const eduDiv = props.eduArray.map((edu, i) => (\n    <div data-index={i} data-nav=\"education\" key={i} className=\"edu-section-cv\">\n      <h4 className=\"h4-cv title\">Education History</h4>\n      <h4 className=\"h4-cv\">{edu.institution}</h4>\n      <h4 className=\"h4-cv\">{edu.typeOfEd}</h4>\n      <p>{edu.fieldOfStudy}</p>\n      <p className=\"dates-of-empledu\">\n        {edu.eduBeginDate.toLocaleString(\"default\", { month: \"long\" }) +\n          \" \" +\n          edu.eduBeginDate.toLocaleString(\"default\", { year: \"numeric\" }) +\n          \" - \" +\n          edu.eduEndDate.toLocaleString(\"default\", { month: \"long\" }) +\n          \" \" +\n          edu.eduEndDate.toLocaleString(\"default\", { year: \"numeric\" })}\n      </p>\n      <button\n        type=\"button\"\n        className=\"submit-add edit\"\n        onClick={props.editSection}\n      >\n        Edit\n      </button>\n    </div>\n  ));\n  return props.eduArray ? <React.Fragment>{eduDiv}</React.Fragment> : null;\n}\n\nexport default EducationSection;\n","import React from \"react\";\n\nfunction SectionHeader(props) {\n  return (\n    <div className={props.class}>\n      <button\n        className=\"header-button\"\n        style={{ marginTop: \"50px\" }}\n        onClick={props.onHeaderClick}\n        data-buttonname={props.data}\n      >\n        {props.name}\n      </button>\n      {props.children}\n    </div>\n  );\n}\n\nexport default SectionHeader;\n","import React, { Component } from \"react\";\n\nclass EducationForm extends Component {\n  render() {\n    return (\n      <div className=\"wrapper-education\">\n        <form className={this.props.educationClass}>\n          <label>Institution Name:</label>\n          <textarea\n            name=\"institution\"\n            data-nav=\"education\"\n            value={this.props.institution}\n            onChange={this.props.handleChange}\n          />\n          <label>Type of Institution:</label>\n          <select\n            name=\"typeOfEd\"\n            data-nav=\"education\"\n            value={this.props.typeOfEd}\n            onChange={this.props.handleChange}\n          >\n            <option value=\"base\">--</option>\n            <option style={{ fontFamily: \"Lato\" }} value=\"Undergraduate\">\n              Undergraduate\n            </option>\n            <option value=\"Graduate\">Graduate</option>\n            <option value=\"Post-Graduate\">Post Graduate</option>\n            <option selected value=\"Certification\">\n              Other\n            </option>\n          </select>\n          <label>Field of Study:</label>\n          <textarea\n            name=\"fieldOfStudy\"\n            data-nav=\"education\"\n            value={this.props.fieldOfStudy}\n            onChange={this.props.handleChange}\n          />\n          <label>Years Attended:</label>\n          <div class=\"datepicker\">{this.props.calendar}</div>\n          <label>Done with education history?</label>\n          <button\n            type=\"button\"\n            className=\"submit-add\"\n            id=\"submit\"\n            data-target=\"education\"\n            onClick={this.props.handleSubmit}\n          >\n            Submit\n          </button>\n          <label>Submit and add another institution</label>\n          <button\n            type=\"button\"\n            className=\"submit-add\"\n            id=\"addEdu\"\n            data-target=\"education\"\n            onClick={this.props.handleSubmit}\n          >\n            Add\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EducationForm;\n","import React, { Component } from \"react\";\n\nclass WorkHistory extends Component {\n  render() {\n    return (\n      <div className=\"wrapper-employment\">\n        <form className={this.props.employmentClass}>\n          <label>Employer:</label>\n          <textarea\n            name=\"employer\"\n            data-nav=\"employment\"\n            value={this.props.employer}\n            onChange={this.props.handleChange}\n          />\n          <label>Job Title:</label>\n          <textarea\n            name=\"title\"\n            data-nav=\"employment\"\n            value={this.props.title}\n            onChange={this.props.handleChange}\n          />\n          <label>Summary of duties:</label>\n          <textarea\n            id=\"duties\"\n            name=\"duties\"\n            data-nav=\"employment\"\n            value={this.props.duties}\n            onChange={this.props.handleChange}\n          />\n\n          <label>Dates of Employment:</label>\n          <div class=\"datepicker\">{this.props.calendar}</div>\n          <label>Done with work history?</label>\n          <button\n            type=\"button\"\n            id=\"submit\"\n            className=\"submit-add\"\n            data-target=\"employment\"\n            onClick={this.props.handleSubmit}\n          >\n            Submit\n          </button>\n          <label>Submit and add another job</label>\n          <button\n            type=\"button\"\n            id=\"addWork\"\n            className=\"submit-add\"\n            data-target=\"employment\"\n            onClick={this.props.handleSubmit}\n          >\n            Add\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default WorkHistory;\n","import React from \"react\";\n\nfunction GeneratedCV(props) {\n  return <div className=\"cv-container\">{props.children}</div>;\n}\n\nexport default GeneratedCV;\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactSection from \"./components/ContactSection\";\nimport EmploymentSection from \"./components/EmploymentSection\";\nimport EducationSection from \"./components/EducationSection\";\nimport SectionHeader from \"./components/SectionHeader\";\nimport EducationForm from \"./components/EducationForm\";\nimport WorkHistory from \"./components/WorkHistory\";\nimport GeneratedCV from \"./components/GeneratedCV\";\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contactClass: \"contact\",\n      educationClass: \"education\",\n      employmentClass: \"employment\",\n      contactInfo: false,\n      educationInfo: false,\n      employmentInfo: false,\n      educationArray: [],\n      employmentArray: [],\n      contactArray: [],\n      readyToGenerate: false,\n      generateButtonClassName: \"button-not-ready\",\n      generateButtonText: \"CV Not Ready to Generate\",\n      contact: {\n        firstNameLastName: \"\",\n        phone: \"\",\n        email: \"\",\n      },\n      education: {\n        institution: \"\",\n        typeOfEd: \"\",\n        fieldOfStudy: \"\",\n        eduEndDate: new Date(),\n        eduBeginDate: new Date(),\n      },\n      employment: {\n        employer: \"\",\n        title: \"\",\n        duties: \"\",\n        emplBeginDate: new Date(),\n        emplEndDate: new Date(),\n      },\n    };\n  }\n\n  getDefaultObject = (obj) => {\n    const defaultValues = {\n      string: \"\",\n      boolean: false,\n    };\n\n    return Object.keys(obj).reduce((acc, key) => {\n      return { ...acc, [key]: defaultValues[typeof obj[key]] };\n    }, {});\n  };\n\n  dateChange = (date, name, category) => {\n    this.setState((prevState) => ({\n      [category]: { ...prevState[category], [name]: date },\n    }));\n  };\n\n  handleChange = (e) => {\n    const value = e.target.value;\n    const field = e.target.dataset.nav;\n    console.log(field);\n    this.setState((prevState) => ({\n      [field]: {\n        ...prevState[field],\n        [e.target.name]: value,\n      },\n    }));\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const stateObject = e.target.dataset.target;\n    const initialClass = `${stateObject}Class`;\n    const showFormClass = `${stateObject}-show`;\n    const array = `${stateObject}Array`;\n    const infoBoolean = `${stateObject}Info`;\n    e.target.id === \"submit\"\n      ? this.setState({ [initialClass]: stateObject })\n      : this.setState({ [initialClass]: showFormClass });\n    this.setState(\n      {\n        [array]: this.state[array].concat(this.state[stateObject]),\n        [stateObject]: this.getDefaultObject(this.state[stateObject]),\n        [infoBoolean]: true,\n      },\n      () => this.isReadyToGenerate(),\n      () => console.log(this.state[stateObject])\n    );\n  };\n\n  isReadyToGenerate = () => {\n    if (\n      this.state.contactInfo &&\n      this.state.employmentInfo &&\n      this.state.educationInfo\n    ) {\n      this.setState({\n        generateButtonText: \"Click to Generate CV\",\n        generateButtonClassName: \"button-ready\",\n      });\n    }\n  };\n\n  onHeaderClick = (e) => {\n    const headerName = e.target.dataset.buttonname;\n    const stateName = `${headerName}Class`;\n    const stateShow = `${headerName}-show`;\n    let newState;\n    newState = this.state[stateName] === stateShow ? headerName : stateShow;\n    this.setState({\n      [stateName]: newState,\n    });\n  };\n\n  generateCV = () => {\n    if (\n      this.state.contactInfo &&\n      this.state.employmentInfo &&\n      this.state.educationInfo\n    ) {\n      this.setState({ readyToGenerate: !this.state.readyToGenerate });\n    } else if (\n      !this.state.contactInfo ||\n      !this.state.employmentInfo ||\n      !this.state.educationInfo\n    ) {\n      console.log(\"not ready to generate\");\n    }\n  };\n\n  validatePhone = () => {\n    let phoneRegex = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n    let number = this.state.contact.phone;\n    let formattedPhoneNumber = number.replace(phoneRegex, \"($1) $2-$3\");\n    this.setState((prevState) => ({\n      contact: {\n        ...prevState.contact,\n        phone: formattedPhoneNumber,\n      },\n    }));\n  };\n\n  editSection = (e) => {\n    const parentDiv = e.target.parentNode;\n    parentDiv.remove();\n    const index = e.target.parentNode.dataset.index;\n    const nav = e.target.parentNode.dataset.nav;\n    const classState = `${nav}Class`;\n    const stateShow = `${nav}-show`;\n    const navArray = `${nav}Array`;\n    console.log(navArray);\n    console.log(index);\n    this.setState((prevState) => ({\n      [nav]: { ...(prevState[nav] = this.state[navArray][index]) },\n    }));\n    this.setState({ [classState]: stateShow });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Header />\n        <SectionHeader\n          class=\"header-contact\"\n          name=\"Contact Information\"\n          data=\"contact\"\n          onHeaderClick={this.onHeaderClick}\n        >\n          <ContactForm\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n            validatePhone={this.validatePhone}\n            firstName={this.state.contact.firstName}\n            lastName={this.state.contact.lastName}\n            phone={this.state.contact.phone}\n            email={this.state.contact.email}\n            contactClass={this.state.contactClass}\n          />\n        </SectionHeader>\n\n        <SectionHeader\n          class=\"header-education\"\n          name=\"Education History\"\n          data=\"education\"\n          onHeaderClick={this.onHeaderClick}\n        >\n          <EducationForm\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n            institution={this.state.education.institution}\n            typeOfEd={this.state.education.typeOfEd}\n            fieldOfStudy={this.state.education.fieldOfStudy}\n            educationClass={this.state.educationClass}\n            calendar={\n              <>\n                <DatePicker\n                  onChange={(date) =>\n                    this.dateChange(date, \"eduBeginDate\", \"education\")\n                  }\n                  selected={this.state.education.eduBeginDate}\n                  dateFormat=\"MM/yyyy\"\n                  showMonthYearPicker\n                  name=\"eduBeginDate\"\n                  category=\"education\"\n                  className=\"datepicker\"\n                />\n                <DatePicker\n                  selected={this.state.education.eduEndDate}\n                  onChange={(date) =>\n                    this.dateChange(date, \"eduEndDate\", \"education\")\n                  }\n                  dateFormat=\"MM/yyyy\"\n                  showMonthYearPicker\n                  name=\"eduEndDate\"\n                  category=\"education\"\n                />\n              </>\n            }\n          ></EducationForm>\n        </SectionHeader>\n        <SectionHeader\n          class=\"header-employment\"\n          name=\"Work History\"\n          data=\"employment\"\n          onHeaderClick={this.onHeaderClick}\n        >\n          <WorkHistory\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n            employer={this.state.employment.employer}\n            title={this.state.employment.title}\n            duties={this.state.employment.duties}\n            employmentClass={this.state.employmentClass}\n            calendar={\n              <>\n                <DatePicker\n                  name=\"emplBeginDate\"\n                  category=\"employment\"\n                  selected={this.state.employment.emplBeginDate}\n                  onChange={(date) =>\n                    this.dateChange(date, \"emplBeginDate\", \"employment\")\n                  }\n                  dateFormat=\"MM/yyyy\"\n                  showMonthYearPicker\n                />\n                <DatePicker\n                  name=\"emplEndDate\"\n                  category=\"employment\"\n                  selected={this.state.employment.emplEndDate}\n                  onChange={(date) =>\n                    this.dateChange(date, \"emplEndDate\", \"employment\")\n                  }\n                  dateFormat=\"MM/yyyy\"\n                  showMonthYearPicker\n                />\n              </>\n            }\n          />\n        </SectionHeader>\n        <button\n          type=\"button\"\n          className={this.state.generateButtonClassName}\n          onClick={this.generateCV}\n        >\n          {this.state.generateButtonText}\n        </button>\n        {this.state.readyToGenerate ? (\n          <GeneratedCV>\n            <ContactSection\n              contactArray={this.state.contactArray}\n              editSection={this.editSection}\n            />\n            <EducationSection\n              eduArray={this.state.educationArray}\n              editSection={this.editSection}\n            />\n            <EmploymentSection\n              emplArray={this.state.employmentArray}\n              editSection={this.editSection}\n            />\n          </GeneratedCV>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}